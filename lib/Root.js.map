{"version":3,"sources":["../src/Root.js"],"names":["Root","props","state","Object","assign","definition","failedToValidate","onConfirm","bind","onCancel","onFieldModified","nextProps","setState","isOpen","title","fields","confirmButtonText","cancelButtonText","deleteButtonText","hasInvalids","overlay","data","validations","validateData","invalids","filter","elem","valid","length","prevState","onConfirmCallback","onCancelCallback","onDeleteCallback","window","reactBridge","modal","propTypes","PropTypes","object","isRequired","func"],"mappings":"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","file":"Root.js","sourcesContent":["/**\r\n * Created by zkirilov on 21.3.2017 Ð³..\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport Modal from './components/Modal';\r\nimport validator from './utils/validator';\r\n\r\nclass Root extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = Object.assign({}, this.props.definition, {failedToValidate: false});\r\n        this.onConfirm = this\r\n            .onConfirm\r\n            .bind(this);\r\n        this.onCancel = this\r\n            .onCancel\r\n            .bind(this);\r\n        this.onFieldModified = this\r\n            .onFieldModified\r\n            .bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        this.setState(Object.assign({}, nextProps.definition, {failedToValidate: false}));\r\n    }\r\n\r\n    render() {\r\n        return (<Modal\r\n            isOpen={this.state.isOpen}\r\n            title={this.state.title}\r\n            fields={this.state.fields}\r\n            confirmButtonText={this.state.confirmButtonText}\r\n            cancelButtonText={this.state.cancelButtonText}\r\n            deleteButtonText={this.state.deleteButtonText}\r\n            onConfirm={this.onConfirm}\r\n            onCancel={this.onCancel}\r\n            onFieldModified={this.onFieldModified}\r\n            hasInvalids={this.state.hasInvalids}\r\n            overlay={this.state.overlay}\r\n            data={this.props.data}/>);\r\n    };\r\n\r\n    /**\r\n     * @function onFieldModified\r\n     * Fired after a form field is modified by the user. Used to toggle UI validity indicators\r\n     * @param {object[]} data\r\n     */\r\n    onFieldModified(data) {\r\n\r\n        if (this.state.failedToValidate) {\r\n\r\n            const validations = validator.validateData([...this.state.fields], data);\r\n\r\n            const invalids = validations.filter(function (elem) {\r\n                return !elem.valid;\r\n            });\r\n\r\n            if (invalids.length) {\r\n                this.setState((prevState) => ({hasInvalids: true, fields: validations}));\r\n            } else {\r\n                this.setState((prevState) => ({hasInvalids: false, fields: validations}));\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @function onConfirm\r\n     * @returns {boolean} hasInvalids\r\n     * Fired after the Confirm button is clicked\r\n     * The data which the user provided will be validated\r\n     */\r\n    onConfirm(data) {\r\n\r\n        const validations = validator.validateData([...this.state.fields], data);\r\n        const invalids = validations.filter(function (elem) {\r\n            return !elem.valid;\r\n        });\r\n\r\n        if (invalids.length) {\r\n            this.setState((prevState) => ({hasInvalids: true, failedToValidate: true, fields: validations}));\r\n        } else {\r\n            this.setState((prevState) => ({isOpen: false, hasInvalids: false, failedToValidate: false, fields: this.props.definition.fields}));\r\n\r\n            if (this.props.onConfirmCallback) {\r\n                this\r\n                    .props\r\n                    .onConfirmCallback(data);\r\n            }\r\n        }\r\n        return invalids.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @function onCancel\r\n     * Fired after the Cancel button is clicked\r\n     */\r\n    onCancel() {\r\n        this.setState(prevState => ({isOpen: false, hasInvalids: false, failedToValidate: false, fields: this.props.definition.fields}));\r\n\r\n        if (this.props.onCancelCallback) {\r\n            this\r\n                .props\r\n                .onCancelCallback();\r\n        }\r\n    }\r\n    /**\r\n     * @function onDelete\r\n     * Fired after the Delete button is clicked\r\n     */\r\n    onDelete() {\r\n        this.setState(prevState => ({isOpen: false, hasInvalids: false, failedToValidate: false, fields: this.props.definition.fields}));\r\n\r\n        if (this.props.onDeleteCallback) {\r\n            this\r\n                .props\r\n                .onDeleteCallback();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.reactBridge = window.reactBridge || {};\r\n        window.reactBridge.modal = this;\r\n    }\r\n}\r\n\r\nRoot.propTypes = {\r\n    definition: React.PropTypes.object.isRequired,\r\n    onConfirmCallback: React.PropTypes.func,\r\n    onCancelCallback: React.PropTypes.func,\r\n    onDeleteCallback: React.PropTypes.func,\r\n    data: React.PropTypes.object\r\n};\r\nexport default Root;\r\n"]}
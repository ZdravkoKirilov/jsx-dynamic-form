{"version":3,"sources":["../../../src/components/fields/TextInput.test.js"],"names":["value","name","onChange","label","it","div","document","createElement","render","expectedLabel","actualLabel","querySelector","expect","textContent","toEqual","chosenValue","actualValue","requiredSymbol","querySelectorAll","length"],"mappings":";;AAIA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,QAAQ,aAAd,C,CARA;;;;AASA,IAAMC,OAAO,QAAb;AACA,IAAMC,WAAW,SAAXA,QAAW;AAAA,WAAM,EAAN;AAAA,CAAjB;AACA,IAAMC,QAAQ,aAAd;;AAGAC,GAAG,0BAAH,EAA+B,YAAM;AACjC,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACA,uBAASC,MAAT,CACI;AACI,eAAOL,KADX;AAEI,kBAAUD,QAFd;AAGI,eAAOF,KAHX;AAII,cAAMC;AAJV,MADJ,EAMQI,GANR;AAOH,CATD;;AAWAD,GAAG,uBAAH,EAA4B,YAAM;AAC9B,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAME,gBAAgB,YAAtB;;AAEA,uBAASD,MAAT,CAAgB;AACZ,eAAOC,aADK;AAEZ,kBAAUP,QAFE;AAGZ,eAAOF,KAHK;AAIZ,cAAMC;AAJM,MAAhB,EAKII,GALJ;;AAOA,QAAMK,cAAcL,IAAIM,aAAJ,CAAkB,OAAlB,CAApB;;AAEAC,WAAOF,YAAYG,WAAnB,EAAgCC,OAAhC,CAAwCL,aAAxC;AACH,CAdD;;AAgBAL,GAAG,uBAAH,EAA4B,YAAM;AAC9B,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAMQ,cAAc,aAApB;;AAEA,uBAASP,MAAT,CAAgB;AACZ,eAAOO,WADK;AAEZ,eAAOZ,KAFK;AAGZ,kBAAUD,QAHE;AAIZ,cAAMD;AAJM,MAAhB,EAKII,GALJ;;AAOA,QAAMW,cAAcX,IAAIM,aAAJ,CAAkB,OAAlB,EAA2BX,KAA/C;;AAEAY,WAAOI,WAAP,EAAoBF,OAApB,CAA4BC,WAA5B;AACH,CAdD;;AAgBAX,GAAG,4BAAH,EAAiC,YAAM;AACnC,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,uBAASC,MAAT,CAAgB;AACZ,kBAAU,IADE;AAEZ,eAAOL,KAFK;AAGZ,kBAAUD,QAHE;AAIZ,eAAOF,KAJK;AAKZ,cAAMC;AALM,MAAhB,EAMII,GANJ;;AAQA,QAAMY,iBAAiBZ,IAAIa,gBAAJ,CAAqB,qBAArB,CAAvB;AACAN,WAAOK,eAAeE,MAAtB,EAA8BL,OAA9B,CAAsC,CAAtC;AACH,CAbD;;AAeAV,GAAG,2BAAH,EAAgC,YAAM;AAClC,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,uBAASC,MAAT,CAAgB;AACZ,eAAO,KADK;AAEZ,eAAOL,KAFK;AAGZ,kBAAUD,QAHE;AAIZ,eAAOF,KAJK;AAKZ,cAAMC;AALM,MAAhB,EAMII,GANJ;;AAQA,QAAMY,iBAAiBZ,IAAIa,gBAAJ,CAAqB,oBAArB,CAAvB;AACAN,WAAOK,eAAeE,MAAtB,EAA8BL,OAA9B,CAAsC,CAAtC;AACH,CAbD","file":"TextInput.test.js","sourcesContent":["/**\r\n * Created by zkirilov on 24.3.2017 Ð³..\r\n */\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TextInput from './TextInput';\r\n\r\nconst value = \"Hello World\";\r\nconst name = 'Number';\r\nconst onChange = () => 55;\r\nconst label = 'Hello World';\r\n\r\n\r\nit('renders without crashing', () => {\r\n    const div = document.createElement('div');\r\n    ReactDOM.render(\r\n        <TextInput\r\n            label={label}\r\n            onChange={onChange}\r\n            value={value}\r\n            name={name}\r\n        />, div);\r\n});\r\n\r\nit('renders correct label', () => {\r\n    const div = document.createElement('div');\r\n    const expectedLabel = \"Some label\";\r\n\r\n    ReactDOM.render(<TextInput\r\n        label={expectedLabel}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n    />, div);\r\n\r\n    const actualLabel = div.querySelector('label');\r\n\r\n    expect(actualLabel.textContent).toEqual(expectedLabel);\r\n});\r\n\r\nit('renders correct value', () => {\r\n    const div = document.createElement('div');\r\n    const chosenValue = \"Hello World\";\r\n\r\n    ReactDOM.render(<TextInput\r\n        value={chosenValue}\r\n        label={label}\r\n        onChange={onChange}\r\n        name={name}\r\n    />, div);\r\n\r\n    const actualValue = div.querySelector('input').value;\r\n\r\n    expect(actualValue).toEqual(chosenValue);\r\n});\r\n\r\nit('renders required indicator', () => {\r\n    const div = document.createElement('div');\r\n\r\n    ReactDOM.render(<TextInput\r\n        required={true}\r\n        label={label}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n    />, div);\r\n\r\n    const requiredSymbol = div.querySelectorAll('.required-indicator');\r\n    expect(requiredSymbol.length).toEqual(1);\r\n});\r\n\r\nit('renders invalid indicator', () => {\r\n    const div = document.createElement('div');\r\n\r\n    ReactDOM.render(<TextInput\r\n        valid={false}\r\n        label={label}\r\n        onChange={onChange}\r\n        value={value}\r\n        name={name}\r\n    />, div);\r\n\r\n    const requiredSymbol = div.querySelectorAll('.invalid-indicator');\r\n    expect(requiredSymbol.length).toEqual(1);\r\n});\r\n"]}
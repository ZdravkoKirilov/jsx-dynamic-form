{"version":3,"sources":["../../src/components/Modal.test.js"],"names":["onConfirm","it","div","document","createElement","render","modal","querySelector","expect","style","top","toEqual","not","toContain","warnings","querySelectorAll","length","jest","fn","button","click","toHaveBeenCalled","onCancel"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA,IAAMA,YAAY,SAAZA,SAAY;AAAA,WAAM,YAAN;AAAA,CAAlB;;AAEAC,GAAG,0BAAH,EAA+B,YAAM;AACjC,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,uBAASC,MAAT,CAAgB;AACZ,eAAM,aADM;AAEZ,mBAAWL;AAFC,MAAhB,EAGIE,GAHJ;AAIH,CAPD;;AASAD,GAAG,oCAAH,EAAyC,YAAM;AAC3C,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,uBAASC,MAAT,CAAgB;AACZ,eAAM,aADM;AAEZ,mBAAWL,SAFC;AAGZ,gBAAQ;AAHI,MAAhB,EAIIE,GAJJ;;AAMA,QAAMI,QAAQJ,IAAIK,aAAJ,CAAkB,aAAlB,CAAd;AACAC,WAAOF,MAAMG,KAAN,CAAYC,GAAnB,EAAwBC,OAAxB,CAAgC,SAAhC;AACH,CAXD;;AAaAV,GAAG,mCAAH,EAAwC,YAAM;AAC1C,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,uBAASC,MAAT,CAAgB;AACZ,eAAM,aADM;AAEZ,mBAAWL,SAFC;AAGZ,gBAAQ;AAHI,MAAhB,EAIIE,GAJJ;;AAMA,QAAMI,QAAQJ,IAAIK,aAAJ,CAAkB,aAAlB,CAAd;AACAC,WAAOF,MAAMG,KAAN,CAAYC,GAAnB,EAAwBE,GAAxB,CAA4BC,SAA5B,CAAsC,GAAtC;AACH,CAXD;;AAaAZ,GAAG,2BAAH,EAAgC,YAAM;AAClC,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;;AAEA,uBAASC,MAAT,CAAgB;AACZ,eAAM,aADM;AAEZ,mBAAWL,SAFC;AAGZ,qBAAa;AAHD,MAAhB,EAIIE,GAJJ;;AAMA,QAAMY,WAAWZ,IAAIa,gBAAJ,CAAqB,iBAArB,CAAjB;AACAP,WAAOM,SAASE,MAAhB,EAAwBL,OAAxB,CAAgC,CAAhC;AACH,CAXD;;AAaAV,GAAG,2DAAH,EAAgE,YAAM;AAClE,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAMJ,YAAYiB,KAAKC,EAAL,EAAlB;;AAEA,uBAASb,MAAT,CAAgB;AACZ,eAAM,aADM;AAEZ,mBAAWL;AAFC,MAAhB,EAGIE,GAHJ;;AAKA,QAAMiB,SAASjB,IAAIK,aAAJ,CAAkB,sBAAlB,CAAf;AACA,mCAASa,KAAT,CAAeD,MAAf;;AAEAX,WAAOR,SAAP,EAAkBqB,gBAAlB;AACH,CAbD;;AAeApB,GAAG,yDAAH,EAA8D,YAAM;AAChE,QAAMC,MAAMC,SAASC,aAAT,CAAuB,KAAvB,CAAZ;AACA,QAAMkB,WAAWL,KAAKC,EAAL,EAAjB;;AAEA,uBAASb,MAAT,CAAgB;AACZ,eAAM,aADM;AAEZ,mBAAWL,SAFC;AAGZ,kBAAUsB,QAHE;AAIZ,0BAAiB;AAJL,MAAhB,EAKIpB,GALJ;;AAOA,QAAMiB,SAASjB,IAAIK,aAAJ,CAAkB,qBAAlB,CAAf;AACA,mCAASa,KAAT,CAAeD,MAAf;;AAEAX,WAAOc,QAAP,EAAiBD,gBAAjB;AACH,CAfD","file":"Modal.test.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from './Modal';\nimport {Simulate} from 'react-addons-test-utils';\n\nconst onConfirm = () => 'some value';\n\nit('renders without crashing', () => {\n    const div = document.createElement('div');\n\n    ReactDOM.render(<Modal\n        title=\"Hello World\"\n        onConfirm={onConfirm}\n    />, div);\n});\n\nit('renders outside screen when closed', () => {\n    const div = document.createElement('div');\n\n    ReactDOM.render(<Modal\n        title=\"Hello World\"\n        onConfirm={onConfirm}\n        isOpen={false}\n    />, div);\n\n    const modal = div.querySelector('.modal-root');\n    expect(modal.style.top).toEqual('-1000px');\n});\n\nit('renders inside screen when opened', () => {\n    const div = document.createElement('div');\n\n    ReactDOM.render(<Modal\n        title=\"Hello World\"\n        onConfirm={onConfirm}\n        isOpen={true}\n    />, div);\n\n    const modal = div.querySelector('.modal-root');\n    expect(modal.style.top).not.toContain('-');\n});\n\nit('renders invalid indicator', () => {\n    const div = document.createElement('div');\n\n    ReactDOM.render(<Modal\n        title=\"Hello World\"\n        onConfirm={onConfirm}\n        hasInvalids={true}\n    />, div);\n\n    const warnings = div.querySelectorAll('.modal-warnings');\n    expect(warnings.length).toEqual(1);\n});\n\nit('invokes onConfirm function when Confirm button is clicked', () => {\n    const div = document.createElement('div');\n    const onConfirm = jest.fn();\n\n    ReactDOM.render(<Modal\n        title=\"Hello World\"\n        onConfirm={onConfirm}\n    />, div);\n\n    const button = div.querySelector('.modal-root .confirm');\n    Simulate.click(button);\n\n    expect(onConfirm).toHaveBeenCalled();\n});\n\nit('invokes onCancel function when Cancel button is clicked', () => {\n    const div = document.createElement('div');\n    const onCancel = jest.fn();\n\n    ReactDOM.render(<Modal\n        title=\"Hello World\"\n        onConfirm={onConfirm}\n        onCancel={onCancel}\n        cancelButtonText='Cancel'\n    />, div);\n\n    const button = div.querySelector('.modal-root .cancel');\n    Simulate.click(button);\n\n    expect(onCancel).toHaveBeenCalled();\n});\n"]}